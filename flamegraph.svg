<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="614" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="597.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="597.00"> </text><svg id="frames" x="10" width="1180" total_samples="23043"><g><title>winter_math::fft::serial::fft_in_place (4 samples, 0.02%)</title><rect x="0.0000%" y="533" width="0.0174%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="4"/><text x="0.2500%" y="543.50"></text></g><g><title>blake3_compress_in_place_sse41 (1,935 samples, 8.40%)</title><rect x="0.0174%" y="533" width="8.3973%" height="15" fill="rgb(217,0,24)" fg:x="4" fg:w="1935"/><text x="0.2674%" y="543.50">blake3_compr..</text></g><g><title>winter_utils::transpose_slice (40 samples, 0.17%)</title><rect x="8.4234%" y="405" width="0.1736%" height="15" fill="rgb(221,193,54)" fg:x="1941" fg:w="40"/><text x="8.6734%" y="415.50"></text></g><g><title>winter_prover::trace::poly_table::TracePolyTable&lt;E&gt;::get_ood_frame (162 samples, 0.70%)</title><rect x="8.5970%" y="405" width="0.7030%" height="15" fill="rgb(248,212,6)" fg:x="1981" fg:w="162"/><text x="8.8470%" y="415.50"></text></g><g><title>winter_prover::trace::poly_table::TracePolyTable&lt;E&gt;::evaluate_at (162 samples, 0.70%)</title><rect x="8.5970%" y="389" width="0.7030%" height="15" fill="rgb(208,68,35)" fg:x="1981" fg:w="162"/><text x="8.8470%" y="399.50"></text></g><g><title>winter_prover::matrix::Matrix&lt;E&gt;::evaluate_columns_at (162 samples, 0.70%)</title><rect x="8.5970%" y="373" width="0.7030%" height="15" fill="rgb(232,128,0)" fg:x="1981" fg:w="162"/><text x="8.8470%" y="383.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (31 samples, 0.13%)</title><rect x="9.3000%" y="53" width="0.1345%" height="15" fill="rgb(207,160,47)" fg:x="2143" fg:w="31"/><text x="9.5500%" y="63.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (99 samples, 0.43%)</title><rect x="9.3000%" y="69" width="0.4296%" height="15" fill="rgb(228,23,34)" fg:x="2143" fg:w="99"/><text x="9.5500%" y="79.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (173 samples, 0.75%)</title><rect x="9.3000%" y="85" width="0.7508%" height="15" fill="rgb(218,30,26)" fg:x="2143" fg:w="173"/><text x="9.5500%" y="95.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (247 samples, 1.07%)</title><rect x="9.3000%" y="101" width="1.0719%" height="15" fill="rgb(220,122,19)" fg:x="2143" fg:w="247"/><text x="9.5500%" y="111.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (331 samples, 1.44%)</title><rect x="9.3000%" y="117" width="1.4364%" height="15" fill="rgb(250,228,42)" fg:x="2143" fg:w="331"/><text x="9.5500%" y="127.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (409 samples, 1.77%)</title><rect x="9.3000%" y="133" width="1.7749%" height="15" fill="rgb(240,193,28)" fg:x="2143" fg:w="409"/><text x="9.5500%" y="143.50">w..</text></g><g><title>winter_math::fft::serial::fft_in_place (490 samples, 2.13%)</title><rect x="9.3000%" y="149" width="2.1265%" height="15" fill="rgb(216,20,37)" fg:x="2143" fg:w="490"/><text x="9.5500%" y="159.50">w..</text></g><g><title>winter_math::fft::serial::fft_in_place (587 samples, 2.55%)</title><rect x="9.3000%" y="165" width="2.5474%" height="15" fill="rgb(206,188,39)" fg:x="2143" fg:w="587"/><text x="9.5500%" y="175.50">wi..</text></g><g><title>winter_math::fft::serial::fft_in_place (669 samples, 2.90%)</title><rect x="9.3000%" y="181" width="2.9033%" height="15" fill="rgb(217,207,13)" fg:x="2143" fg:w="669"/><text x="9.5500%" y="191.50">wi..</text></g><g><title>winter_math::fft::serial::fft_in_place (759 samples, 3.29%)</title><rect x="9.3000%" y="197" width="3.2938%" height="15" fill="rgb(231,73,38)" fg:x="2143" fg:w="759"/><text x="9.5500%" y="207.50">win..</text></g><g><title>winter_math::fft::serial::fft_in_place (846 samples, 3.67%)</title><rect x="9.3000%" y="213" width="3.6714%" height="15" fill="rgb(225,20,46)" fg:x="2143" fg:w="846"/><text x="9.5500%" y="223.50">wint..</text></g><g><title>winter_math::fft::serial::fft_in_place (935 samples, 4.06%)</title><rect x="9.3000%" y="229" width="4.0576%" height="15" fill="rgb(210,31,41)" fg:x="2143" fg:w="935"/><text x="9.5500%" y="239.50">wint..</text></g><g><title>winter_math::fft::serial::fft_in_place (1,024 samples, 4.44%)</title><rect x="9.3000%" y="245" width="4.4439%" height="15" fill="rgb(221,200,47)" fg:x="2143" fg:w="1024"/><text x="9.5500%" y="255.50">winte..</text></g><g><title>winter_math::fft::serial::fft_in_place (1,119 samples, 4.86%)</title><rect x="9.3000%" y="261" width="4.8561%" height="15" fill="rgb(226,26,5)" fg:x="2143" fg:w="1119"/><text x="9.5500%" y="271.50">winter..</text></g><g><title>winter_math::fft::serial::fft_in_place (1,216 samples, 5.28%)</title><rect x="9.3000%" y="277" width="5.2771%" height="15" fill="rgb(249,33,26)" fg:x="2143" fg:w="1216"/><text x="9.5500%" y="287.50">winter..</text></g><g><title>winter_math::fft::serial::fft_in_place (1,308 samples, 5.68%)</title><rect x="9.3000%" y="293" width="5.6763%" height="15" fill="rgb(235,183,28)" fg:x="2143" fg:w="1308"/><text x="9.5500%" y="303.50">winter_..</text></g><g><title>winter_math::fft::serial::fft_in_place (1,405 samples, 6.10%)</title><rect x="9.3000%" y="309" width="6.0973%" height="15" fill="rgb(221,5,38)" fg:x="2143" fg:w="1405"/><text x="9.5500%" y="319.50">winter_m..</text></g><g><title>winter_math::fft::serial::fft_in_place (1,500 samples, 6.51%)</title><rect x="9.3000%" y="325" width="6.5096%" height="15" fill="rgb(247,18,42)" fg:x="2143" fg:w="1500"/><text x="9.5500%" y="335.50">winter_ma..</text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="15.8096%" y="325" width="0.0174%" height="15" fill="rgb(241,131,45)" fg:x="3643" fg:w="4"/><text x="16.0596%" y="335.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (1,597 samples, 6.93%)</title><rect x="9.3000%" y="341" width="6.9305%" height="15" fill="rgb(249,31,29)" fg:x="2143" fg:w="1597"/><text x="9.5500%" y="351.50">winter_ma..</text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.03%)</title><rect x="16.2305%" y="341" width="0.0260%" height="15" fill="rgb(225,111,53)" fg:x="3740" fg:w="6"/><text x="16.4805%" y="351.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (1,712 samples, 7.43%)</title><rect x="9.3000%" y="357" width="7.4296%" height="15" fill="rgb(238,160,17)" fg:x="2143" fg:w="1712"/><text x="9.5500%" y="367.50">winter_mat..</text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.05%)</title><rect x="16.7296%" y="357" width="0.0521%" height="15" fill="rgb(214,148,48)" fg:x="3855" fg:w="12"/><text x="16.9796%" y="367.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (1,846 samples, 8.01%)</title><rect x="9.3000%" y="373" width="8.0111%" height="15" fill="rgb(232,36,49)" fg:x="2143" fg:w="1846"/><text x="9.5500%" y="383.50">winter_math..</text></g><g><title>winter_prover::matrix::Matrix&lt;E&gt;::evaluate_columns_over (2,636 samples, 11.44%)</title><rect x="9.3000%" y="405" width="11.4395%" height="15" fill="rgb(209,103,24)" fg:x="2143" fg:w="2636"/><text x="9.5500%" y="415.50">winter_prover::ma..</text></g><g><title>winter_math::fft::evaluate_poly_with_offset (2,636 samples, 11.44%)</title><rect x="9.3000%" y="389" width="11.4395%" height="15" fill="rgb(229,88,8)" fg:x="2143" fg:w="2636"/><text x="9.5500%" y="399.50">winter_math::fft:..</text></g><g><title>winter_prover::matrix::Matrix&lt;E&gt;::evaluate_columns_at (37 samples, 0.16%)</title><rect x="20.7395%" y="405" width="0.1606%" height="15" fill="rgb(213,181,19)" fg:x="4779" fg:w="37"/><text x="20.9895%" y="415.50"></text></g><g><title>blake3::Output::root_hash (15 samples, 0.07%)</title><rect x="20.9001%" y="357" width="0.0651%" height="15" fill="rgb(254,191,54)" fg:x="4816" fg:w="15"/><text x="21.1501%" y="367.50"></text></g><g><title>[libc.so.6] (17 samples, 0.07%)</title><rect x="20.9652%" y="341" width="0.0738%" height="15" fill="rgb(241,83,37)" fg:x="4831" fg:w="17"/><text x="21.2152%" y="351.50"></text></g><g><title>blake3::ChunkState::update (32 samples, 0.14%)</title><rect x="20.9652%" y="357" width="0.1389%" height="15" fill="rgb(233,36,39)" fg:x="4831" fg:w="32"/><text x="21.2152%" y="367.50"></text></g><g><title>blake3::hash (74 samples, 0.32%)</title><rect x="20.9001%" y="373" width="0.3211%" height="15" fill="rgb(226,3,54)" fg:x="4816" fg:w="74"/><text x="21.1501%" y="383.50"></text></g><g><title>winter_crypto::merkle::MerkleTree&lt;H&gt;::new (109 samples, 0.47%)</title><rect x="20.9001%" y="389" width="0.4730%" height="15" fill="rgb(245,192,40)" fg:x="4816" fg:w="109"/><text x="21.1501%" y="399.50"></text></g><g><title>blake3::Output::root_hash (19 samples, 0.08%)</title><rect x="21.3731%" y="373" width="0.0825%" height="15" fill="rgb(238,167,29)" fg:x="4925" fg:w="19"/><text x="21.6231%" y="383.50"></text></g><g><title>[libc.so.6] (11 samples, 0.05%)</title><rect x="21.4555%" y="357" width="0.0477%" height="15" fill="rgb(232,182,51)" fg:x="4944" fg:w="11"/><text x="21.7055%" y="367.50"></text></g><g><title>blake3::ChunkState::update (18 samples, 0.08%)</title><rect x="21.4555%" y="373" width="0.0781%" height="15" fill="rgb(231,60,39)" fg:x="4944" fg:w="18"/><text x="21.7055%" y="383.50"></text></g><g><title>blake3::hash (72 samples, 0.31%)</title><rect x="21.3731%" y="389" width="0.3125%" height="15" fill="rgb(208,69,12)" fg:x="4925" fg:w="72"/><text x="21.6231%" y="399.50"></text></g><g><title>winter_prover::matrix::Matrix&lt;E&gt;::commit_to_rows (217 samples, 0.94%)</title><rect x="20.9001%" y="405" width="0.9417%" height="15" fill="rgb(235,93,37)" fg:x="4816" fg:w="217"/><text x="21.1501%" y="415.50"></text></g><g><title>winter_math::field::f128::mul (453 samples, 1.97%)</title><rect x="21.8418%" y="357" width="1.9659%" height="15" fill="rgb(213,116,39)" fg:x="5033" fg:w="453"/><text x="22.0918%" y="367.50">w..</text></g><g><title>winter_air::air::transition::TransitionConstraintGroup&lt;E&gt;::merge_evaluations2 (693 samples, 3.01%)</title><rect x="21.8418%" y="373" width="3.0074%" height="15" fill="rgb(222,207,29)" fg:x="5033" fg:w="693"/><text x="22.0918%" y="383.50">win..</text></g><g><title>malloc (16 samples, 0.07%)</title><rect x="24.8492%" y="373" width="0.0694%" height="15" fill="rgb(206,96,30)" fg:x="5726" fg:w="16"/><text x="25.0992%" y="383.50"></text></g><g><title>malloc (19 samples, 0.08%)</title><rect x="24.9186%" y="357" width="0.0825%" height="15" fill="rgb(218,138,4)" fg:x="5742" fg:w="19"/><text x="25.1686%" y="367.50"></text></g><g><title>[libc.so.6] (7 samples, 0.03%)</title><rect x="25.0011%" y="357" width="0.0304%" height="15" fill="rgb(250,191,14)" fg:x="5761" fg:w="7"/><text x="25.2511%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (106 samples, 0.46%)</title><rect x="24.9186%" y="373" width="0.4600%" height="15" fill="rgb(239,60,40)" fg:x="5742" fg:w="106"/><text x="25.1686%" y="383.50"></text></g><g><title>[libc.so.6] (15 samples, 0.07%)</title><rect x="25.3786%" y="341" width="0.0651%" height="15" fill="rgb(206,27,48)" fg:x="5848" fg:w="15"/><text x="25.6286%" y="351.50"></text></g><g><title>cfree (22 samples, 0.10%)</title><rect x="25.3786%" y="357" width="0.0955%" height="15" fill="rgb(225,35,8)" fg:x="5848" fg:w="22"/><text x="25.6286%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (87 samples, 0.38%)</title><rect x="25.3786%" y="373" width="0.3776%" height="15" fill="rgb(250,213,24)" fg:x="5848" fg:w="87"/><text x="25.6286%" y="383.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="25.7562%" y="373" width="0.0130%" height="15" fill="rgb(247,123,22)" fg:x="5935" fg:w="3"/><text x="26.0062%" y="383.50"></text></g><g><title>winter_math::field::f128::mul (130 samples, 0.56%)</title><rect x="25.7692%" y="357" width="0.5642%" height="15" fill="rgb(231,138,38)" fg:x="5938" fg:w="130"/><text x="26.0192%" y="367.50"></text></g><g><title>&lt;examples::collatz_divisors::air::CollatzAir as winter_air::air::Air&gt;::evaluate_transition (199 samples, 0.86%)</title><rect x="25.7692%" y="373" width="0.8636%" height="15" fill="rgb(231,145,46)" fg:x="5938" fg:w="199"/><text x="26.0192%" y="383.50"></text></g><g><title>winter_prover::constraints::evaluator::ConstraintEvaluator&lt;A,E&gt;::evaluate_main_transition (5,218 samples, 22.64%)</title><rect x="21.8418%" y="389" width="22.6446%" height="15" fill="rgb(251,118,11)" fg:x="5033" fg:w="5218"/><text x="22.0918%" y="399.50">winter_prover::constraints::evaluato..</text></g><g><title>winter_math::field::f128::mul (130 samples, 0.56%)</title><rect x="44.4864%" y="357" width="0.5642%" height="15" fill="rgb(217,147,25)" fg:x="10251" fg:w="130"/><text x="44.7364%" y="367.50"></text></g><g><title>winter_prover::constraints::boundary::BoundaryConstraintGroup&lt;E&gt;::evaluate_main (204 samples, 0.89%)</title><rect x="44.4864%" y="373" width="0.8853%" height="15" fill="rgb(247,81,37)" fg:x="10251" fg:w="204"/><text x="44.7364%" y="383.50"></text></g><g><title>winter_math::field::f128::mul (734 samples, 3.19%)</title><rect x="45.3717%" y="373" width="3.1853%" height="15" fill="rgb(209,12,38)" fg:x="10455" fg:w="734"/><text x="45.6217%" y="383.50">win..</text></g><g><title>winter_prover::constraints::boundary::BoundaryConstraints&lt;E&gt;::evaluate_main (1,075 samples, 4.67%)</title><rect x="44.4864%" y="389" width="4.6652%" height="15" fill="rgb(227,1,9)" fg:x="10251" fg:w="1075"/><text x="44.7364%" y="399.50">winte..</text></g><g><title>winter_math::field::f128::mul (18 samples, 0.08%)</title><rect x="49.1516%" y="389" width="0.0781%" height="15" fill="rgb(248,47,43)" fg:x="11326" fg:w="18"/><text x="49.4016%" y="399.50"></text></g><g><title>[libc.so.6] (9 samples, 0.04%)</title><rect x="49.2297%" y="373" width="0.0391%" height="15" fill="rgb(221,10,30)" fg:x="11344" fg:w="9"/><text x="49.4797%" y="383.50"></text></g><g><title>cfree (17 samples, 0.07%)</title><rect x="49.2297%" y="389" width="0.0738%" height="15" fill="rgb(210,229,1)" fg:x="11344" fg:w="17"/><text x="49.4797%" y="399.50"></text></g><g><title>[libc.so.6] (167 samples, 0.72%)</title><rect x="49.3035%" y="389" width="0.7247%" height="15" fill="rgb(222,148,37)" fg:x="11361" fg:w="167"/><text x="49.5535%" y="399.50"></text></g><g><title>winter_prover::constraints::evaluator::ConstraintEvaluator&lt;A,E&gt;::evaluate (6,582 samples, 28.56%)</title><rect x="21.8418%" y="405" width="28.5640%" height="15" fill="rgb(234,67,33)" fg:x="5033" fg:w="6582"/><text x="22.0918%" y="415.50">winter_prover::constraints::evaluator::Constra..</text></g><g><title>winter_math::field::f128::mul (213 samples, 0.92%)</title><rect x="50.4058%" y="373" width="0.9244%" height="15" fill="rgb(247,98,35)" fg:x="11615" fg:w="213"/><text x="50.6558%" y="383.50"></text></g><g><title>winter_math::utils::batch_inversion (267 samples, 1.16%)</title><rect x="50.4058%" y="389" width="1.1587%" height="15" fill="rgb(247,138,52)" fg:x="11615" fg:w="267"/><text x="50.6558%" y="399.50"></text></g><g><title>winter_math::field::f128::mul (277 samples, 1.20%)</title><rect x="51.5645%" y="389" width="1.2021%" height="15" fill="rgb(213,79,30)" fg:x="11882" fg:w="277"/><text x="51.8145%" y="399.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (9 samples, 0.04%)</title><rect x="52.7666%" y="53" width="0.0391%" height="15" fill="rgb(246,177,23)" fg:x="12159" fg:w="9"/><text x="53.0166%" y="63.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (20 samples, 0.09%)</title><rect x="52.7666%" y="69" width="0.0868%" height="15" fill="rgb(230,62,27)" fg:x="12159" fg:w="20"/><text x="53.0166%" y="79.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (44 samples, 0.19%)</title><rect x="52.7666%" y="85" width="0.1909%" height="15" fill="rgb(216,154,8)" fg:x="12159" fg:w="44"/><text x="53.0166%" y="95.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (59 samples, 0.26%)</title><rect x="52.7666%" y="101" width="0.2560%" height="15" fill="rgb(244,35,45)" fg:x="12159" fg:w="59"/><text x="53.0166%" y="111.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (75 samples, 0.33%)</title><rect x="52.7666%" y="117" width="0.3255%" height="15" fill="rgb(251,115,12)" fg:x="12159" fg:w="75"/><text x="53.0166%" y="127.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (101 samples, 0.44%)</title><rect x="52.7666%" y="133" width="0.4383%" height="15" fill="rgb(240,54,50)" fg:x="12159" fg:w="101"/><text x="53.0166%" y="143.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (120 samples, 0.52%)</title><rect x="52.7666%" y="149" width="0.5208%" height="15" fill="rgb(233,84,52)" fg:x="12159" fg:w="120"/><text x="53.0166%" y="159.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (140 samples, 0.61%)</title><rect x="52.7666%" y="165" width="0.6076%" height="15" fill="rgb(207,117,47)" fg:x="12159" fg:w="140"/><text x="53.0166%" y="175.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (163 samples, 0.71%)</title><rect x="52.7666%" y="181" width="0.7074%" height="15" fill="rgb(249,43,39)" fg:x="12159" fg:w="163"/><text x="53.0166%" y="191.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (186 samples, 0.81%)</title><rect x="52.7666%" y="197" width="0.8072%" height="15" fill="rgb(209,38,44)" fg:x="12159" fg:w="186"/><text x="53.0166%" y="207.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (210 samples, 0.91%)</title><rect x="52.7666%" y="213" width="0.9113%" height="15" fill="rgb(236,212,23)" fg:x="12159" fg:w="210"/><text x="53.0166%" y="223.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (232 samples, 1.01%)</title><rect x="52.7666%" y="229" width="1.0068%" height="15" fill="rgb(242,79,21)" fg:x="12159" fg:w="232"/><text x="53.0166%" y="239.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (254 samples, 1.10%)</title><rect x="52.7666%" y="245" width="1.1023%" height="15" fill="rgb(211,96,35)" fg:x="12159" fg:w="254"/><text x="53.0166%" y="255.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (276 samples, 1.20%)</title><rect x="52.7666%" y="261" width="1.1978%" height="15" fill="rgb(253,215,40)" fg:x="12159" fg:w="276"/><text x="53.0166%" y="271.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (301 samples, 1.31%)</title><rect x="52.7666%" y="277" width="1.3063%" height="15" fill="rgb(211,81,21)" fg:x="12159" fg:w="301"/><text x="53.0166%" y="287.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (325 samples, 1.41%)</title><rect x="52.7666%" y="293" width="1.4104%" height="15" fill="rgb(208,190,38)" fg:x="12159" fg:w="325"/><text x="53.0166%" y="303.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (349 samples, 1.51%)</title><rect x="52.7666%" y="309" width="1.5146%" height="15" fill="rgb(235,213,38)" fg:x="12159" fg:w="349"/><text x="53.0166%" y="319.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (373 samples, 1.62%)</title><rect x="52.7666%" y="325" width="1.6187%" height="15" fill="rgb(237,122,38)" fg:x="12159" fg:w="373"/><text x="53.0166%" y="335.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (397 samples, 1.72%)</title><rect x="52.7666%" y="341" width="1.7229%" height="15" fill="rgb(244,218,35)" fg:x="12159" fg:w="397"/><text x="53.0166%" y="351.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (421 samples, 1.83%)</title><rect x="52.7666%" y="357" width="1.8270%" height="15" fill="rgb(240,68,47)" fg:x="12159" fg:w="421"/><text x="53.0166%" y="367.50">w..</text></g><g><title>winter_math::fft::serial::fft_in_place (449 samples, 1.95%)</title><rect x="52.7666%" y="373" width="1.9485%" height="15" fill="rgb(210,16,53)" fg:x="12159" fg:w="449"/><text x="53.0166%" y="383.50">w..</text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="54.7151%" y="373" width="0.0174%" height="15" fill="rgb(235,124,12)" fg:x="12608" fg:w="4"/><text x="54.9651%" y="383.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (484 samples, 2.10%)</title><rect x="52.7666%" y="389" width="2.1004%" height="15" fill="rgb(224,169,11)" fg:x="12159" fg:w="484"/><text x="53.0166%" y="399.50">w..</text></g><g><title>winter_math::field::f128::mul (19 samples, 0.08%)</title><rect x="54.8670%" y="357" width="0.0825%" height="15" fill="rgb(250,166,2)" fg:x="12643" fg:w="19"/><text x="55.1170%" y="367.50"></text></g><g><title>winter_math::utils::get_power_series (20 samples, 0.09%)</title><rect x="54.8670%" y="373" width="0.0868%" height="15" fill="rgb(242,216,29)" fg:x="12643" fg:w="20"/><text x="55.1170%" y="383.50"></text></g><g><title>winter_math::fft::get_inv_twiddles (77 samples, 0.33%)</title><rect x="54.8670%" y="389" width="0.3342%" height="15" fill="rgb(230,116,27)" fg:x="12643" fg:w="77"/><text x="55.1170%" y="399.50"></text></g><g><title>[libc.so.6] (105 samples, 0.46%)</title><rect x="55.2055%" y="389" width="0.4557%" height="15" fill="rgb(228,99,48)" fg:x="12721" fg:w="105"/><text x="55.4555%" y="399.50"></text></g><g><title>winter_prover::constraints::evaluation_table::ConstraintEvaluationTable&lt;E&gt;::into_poly (2,015 samples, 8.74%)</title><rect x="50.4058%" y="405" width="8.7445%" height="15" fill="rgb(253,11,6)" fg:x="11615" fg:w="2015"/><text x="50.6558%" y="415.50">winter_prove..</text></g><g><title>winter_math::fft::serial::fft_in_place (15 samples, 0.07%)</title><rect x="59.1503%" y="53" width="0.0651%" height="15" fill="rgb(247,143,39)" fg:x="13630" fg:w="15"/><text x="59.4003%" y="63.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (36 samples, 0.16%)</title><rect x="59.1503%" y="69" width="0.1562%" height="15" fill="rgb(236,97,10)" fg:x="13630" fg:w="36"/><text x="59.4003%" y="79.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (69 samples, 0.30%)</title><rect x="59.1503%" y="85" width="0.2994%" height="15" fill="rgb(233,208,19)" fg:x="13630" fg:w="69"/><text x="59.4003%" y="95.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (107 samples, 0.46%)</title><rect x="59.1503%" y="101" width="0.4643%" height="15" fill="rgb(216,164,2)" fg:x="13630" fg:w="107"/><text x="59.4003%" y="111.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (138 samples, 0.60%)</title><rect x="59.1503%" y="117" width="0.5989%" height="15" fill="rgb(220,129,5)" fg:x="13630" fg:w="138"/><text x="59.4003%" y="127.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (176 samples, 0.76%)</title><rect x="59.1503%" y="133" width="0.7638%" height="15" fill="rgb(242,17,10)" fg:x="13630" fg:w="176"/><text x="59.4003%" y="143.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (238 samples, 1.03%)</title><rect x="59.1503%" y="149" width="1.0329%" height="15" fill="rgb(242,107,0)" fg:x="13630" fg:w="238"/><text x="59.4003%" y="159.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (281 samples, 1.22%)</title><rect x="59.1503%" y="165" width="1.2195%" height="15" fill="rgb(251,28,31)" fg:x="13630" fg:w="281"/><text x="59.4003%" y="175.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (328 samples, 1.42%)</title><rect x="59.1503%" y="181" width="1.4234%" height="15" fill="rgb(233,223,10)" fg:x="13630" fg:w="328"/><text x="59.4003%" y="191.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (369 samples, 1.60%)</title><rect x="59.1503%" y="197" width="1.6014%" height="15" fill="rgb(215,21,27)" fg:x="13630" fg:w="369"/><text x="59.4003%" y="207.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (417 samples, 1.81%)</title><rect x="59.1503%" y="213" width="1.8097%" height="15" fill="rgb(232,23,21)" fg:x="13630" fg:w="417"/><text x="59.4003%" y="223.50">w..</text></g><g><title>winter_math::fft::serial::fft_in_place (458 samples, 1.99%)</title><rect x="59.1503%" y="229" width="1.9876%" height="15" fill="rgb(244,5,23)" fg:x="13630" fg:w="458"/><text x="59.4003%" y="239.50">w..</text></g><g><title>winter_math::fft::serial::fft_in_place (502 samples, 2.18%)</title><rect x="59.1503%" y="245" width="2.1785%" height="15" fill="rgb(226,81,46)" fg:x="13630" fg:w="502"/><text x="59.4003%" y="255.50">w..</text></g><g><title>winter_math::fft::serial::fft_in_place (550 samples, 2.39%)</title><rect x="59.1503%" y="261" width="2.3868%" height="15" fill="rgb(247,70,30)" fg:x="13630" fg:w="550"/><text x="59.4003%" y="271.50">wi..</text></g><g><title>winter_math::fft::serial::fft_in_place (598 samples, 2.60%)</title><rect x="59.1503%" y="277" width="2.5951%" height="15" fill="rgb(212,68,19)" fg:x="13630" fg:w="598"/><text x="59.4003%" y="287.50">wi..</text></g><g><title>winter_math::fft::serial::fft_in_place (646 samples, 2.80%)</title><rect x="59.1503%" y="293" width="2.8035%" height="15" fill="rgb(240,187,13)" fg:x="13630" fg:w="646"/><text x="59.4003%" y="303.50">wi..</text></g><g><title>winter_math::fft::serial::fft_in_place (694 samples, 3.01%)</title><rect x="59.1503%" y="309" width="3.0118%" height="15" fill="rgb(223,113,26)" fg:x="13630" fg:w="694"/><text x="59.4003%" y="319.50">win..</text></g><g><title>winter_math::fft::serial::fft_in_place (743 samples, 3.22%)</title><rect x="59.1503%" y="325" width="3.2244%" height="15" fill="rgb(206,192,2)" fg:x="13630" fg:w="743"/><text x="59.4003%" y="335.50">win..</text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="62.3747%" y="325" width="0.0130%" height="15" fill="rgb(241,108,4)" fg:x="14373" fg:w="3"/><text x="62.6247%" y="335.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (794 samples, 3.45%)</title><rect x="59.1503%" y="341" width="3.4457%" height="15" fill="rgb(247,173,49)" fg:x="13630" fg:w="794"/><text x="59.4003%" y="351.50">win..</text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="62.5960%" y="341" width="0.0130%" height="15" fill="rgb(224,114,35)" fg:x="14424" fg:w="3"/><text x="62.8460%" y="351.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (848 samples, 3.68%)</title><rect x="59.1503%" y="357" width="3.6801%" height="15" fill="rgb(245,159,27)" fg:x="13630" fg:w="848"/><text x="59.4003%" y="367.50">wint..</text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="62.8304%" y="357" width="0.0174%" height="15" fill="rgb(245,172,44)" fg:x="14478" fg:w="4"/><text x="63.0804%" y="367.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (915 samples, 3.97%)</title><rect x="59.1503%" y="373" width="3.9708%" height="15" fill="rgb(236,23,11)" fg:x="13630" fg:w="915"/><text x="59.4003%" y="383.50">wint..</text></g><g><title>winter_prover::composer::DeepCompositionPoly&lt;E&gt;::evaluate (1,305 samples, 5.66%)</title><rect x="59.1503%" y="405" width="5.6633%" height="15" fill="rgb(205,117,38)" fg:x="13630" fg:w="1305"/><text x="59.4003%" y="415.50">winter_..</text></g><g><title>winter_math::fft::evaluate_poly_with_offset (1,305 samples, 5.66%)</title><rect x="59.1503%" y="389" width="5.6633%" height="15" fill="rgb(237,72,25)" fg:x="13630" fg:w="1305"/><text x="59.4003%" y="399.50">winter_..</text></g><g><title>winter_math::field::f128::mul (29 samples, 0.13%)</title><rect x="64.8136%" y="389" width="0.1259%" height="15" fill="rgb(244,70,9)" fg:x="14935" fg:w="29"/><text x="65.0636%" y="399.50"></text></g><g><title>winter_prover::composer::DeepCompositionPoly&lt;E&gt;::adjust_degree (51 samples, 0.22%)</title><rect x="64.8136%" y="405" width="0.2213%" height="15" fill="rgb(217,125,39)" fg:x="14935" fg:w="51"/><text x="65.0636%" y="415.50"></text></g><g><title>winter_math::field::f128::mul (125 samples, 0.54%)</title><rect x="65.0349%" y="373" width="0.5425%" height="15" fill="rgb(235,36,10)" fg:x="14986" fg:w="125"/><text x="65.2849%" y="383.50"></text></g><g><title>winter_prover::composer::acc_trace_poly (177 samples, 0.77%)</title><rect x="65.0349%" y="389" width="0.7681%" height="15" fill="rgb(251,123,47)" fg:x="14986" fg:w="177"/><text x="65.2849%" y="399.50"></text></g><g><title>winter_math::field::f128::mul (36 samples, 0.16%)</title><rect x="65.8031%" y="389" width="0.1562%" height="15" fill="rgb(221,13,13)" fg:x="15163" fg:w="36"/><text x="66.0531%" y="399.50"></text></g><g><title>winter_prover::composer::DeepCompositionPoly&lt;E&gt;::add_trace_polys (225 samples, 0.98%)</title><rect x="65.0349%" y="405" width="0.9764%" height="15" fill="rgb(238,131,9)" fg:x="14986" fg:w="225"/><text x="65.2849%" y="415.50"></text></g><g><title>winter_prover::composer::DeepCompositionPoly&lt;E&gt;::add_composition_poly (89 samples, 0.39%)</title><rect x="66.0114%" y="405" width="0.3862%" height="15" fill="rgb(211,50,8)" fg:x="15211" fg:w="89"/><text x="66.2614%" y="415.50"></text></g><g><title>winter_math::field::f128::mul (69 samples, 0.30%)</title><rect x="66.3976%" y="357" width="0.2994%" height="15" fill="rgb(245,182,24)" fg:x="15300" fg:w="69"/><text x="66.6476%" y="367.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (12 samples, 0.05%)</title><rect x="66.6970%" y="37" width="0.0521%" height="15" fill="rgb(242,14,37)" fg:x="15369" fg:w="12"/><text x="66.9470%" y="47.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (38 samples, 0.16%)</title><rect x="66.6970%" y="53" width="0.1649%" height="15" fill="rgb(246,228,12)" fg:x="15369" fg:w="38"/><text x="66.9470%" y="63.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (67 samples, 0.29%)</title><rect x="66.6970%" y="69" width="0.2908%" height="15" fill="rgb(213,55,15)" fg:x="15369" fg:w="67"/><text x="66.9470%" y="79.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (98 samples, 0.43%)</title><rect x="66.6970%" y="85" width="0.4253%" height="15" fill="rgb(209,9,3)" fg:x="15369" fg:w="98"/><text x="66.9470%" y="95.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (129 samples, 0.56%)</title><rect x="66.6970%" y="101" width="0.5598%" height="15" fill="rgb(230,59,30)" fg:x="15369" fg:w="129"/><text x="66.9470%" y="111.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (164 samples, 0.71%)</title><rect x="66.6970%" y="117" width="0.7117%" height="15" fill="rgb(209,121,21)" fg:x="15369" fg:w="164"/><text x="66.9470%" y="127.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (195 samples, 0.85%)</title><rect x="66.6970%" y="133" width="0.8462%" height="15" fill="rgb(220,109,13)" fg:x="15369" fg:w="195"/><text x="66.9470%" y="143.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (233 samples, 1.01%)</title><rect x="66.6970%" y="149" width="1.0112%" height="15" fill="rgb(232,18,1)" fg:x="15369" fg:w="233"/><text x="66.9470%" y="159.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (271 samples, 1.18%)</title><rect x="66.6970%" y="165" width="1.1761%" height="15" fill="rgb(215,41,42)" fg:x="15369" fg:w="271"/><text x="66.9470%" y="175.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (306 samples, 1.33%)</title><rect x="66.6970%" y="181" width="1.3280%" height="15" fill="rgb(224,123,36)" fg:x="15369" fg:w="306"/><text x="66.9470%" y="191.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (342 samples, 1.48%)</title><rect x="66.6970%" y="197" width="1.4842%" height="15" fill="rgb(240,125,3)" fg:x="15369" fg:w="342"/><text x="66.9470%" y="207.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (376 samples, 1.63%)</title><rect x="66.6970%" y="213" width="1.6317%" height="15" fill="rgb(205,98,50)" fg:x="15369" fg:w="376"/><text x="66.9470%" y="223.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (412 samples, 1.79%)</title><rect x="66.6970%" y="229" width="1.7880%" height="15" fill="rgb(205,185,37)" fg:x="15369" fg:w="412"/><text x="66.9470%" y="239.50">w..</text></g><g><title>winter_math::fft::serial::fft_in_place (452 samples, 1.96%)</title><rect x="66.6970%" y="245" width="1.9616%" height="15" fill="rgb(238,207,15)" fg:x="15369" fg:w="452"/><text x="66.9470%" y="255.50">w..</text></g><g><title>winter_math::fft::serial::fft_in_place (492 samples, 2.14%)</title><rect x="66.6970%" y="261" width="2.1351%" height="15" fill="rgb(213,199,42)" fg:x="15369" fg:w="492"/><text x="66.9470%" y="271.50">w..</text></g><g><title>winter_math::fft::serial::fft_in_place (528 samples, 2.29%)</title><rect x="66.6970%" y="277" width="2.2914%" height="15" fill="rgb(235,201,11)" fg:x="15369" fg:w="528"/><text x="66.9470%" y="287.50">w..</text></g><g><title>winter_math::fft::serial::fft_in_place (567 samples, 2.46%)</title><rect x="66.6970%" y="293" width="2.4606%" height="15" fill="rgb(207,46,11)" fg:x="15369" fg:w="567"/><text x="66.9470%" y="303.50">wi..</text></g><g><title>winter_math::fft::serial::fft_in_place (604 samples, 2.62%)</title><rect x="66.6970%" y="309" width="2.6212%" height="15" fill="rgb(241,35,35)" fg:x="15369" fg:w="604"/><text x="66.9470%" y="319.50">wi..</text></g><g><title>winter_math::fft::serial::fft_in_place (648 samples, 2.81%)</title><rect x="66.6970%" y="325" width="2.8121%" height="15" fill="rgb(243,32,47)" fg:x="15369" fg:w="648"/><text x="66.9470%" y="335.50">wi..</text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.02%)</title><rect x="69.5092%" y="325" width="0.0217%" height="15" fill="rgb(247,202,23)" fg:x="16017" fg:w="5"/><text x="69.7592%" y="335.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (704 samples, 3.06%)</title><rect x="66.6970%" y="341" width="3.0552%" height="15" fill="rgb(219,102,11)" fg:x="15369" fg:w="704"/><text x="66.9470%" y="351.50">win..</text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.03%)</title><rect x="69.7522%" y="341" width="0.0347%" height="15" fill="rgb(243,110,44)" fg:x="16073" fg:w="8"/><text x="70.0022%" y="351.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (770 samples, 3.34%)</title><rect x="66.6970%" y="357" width="3.3416%" height="15" fill="rgb(222,74,54)" fg:x="15369" fg:w="770"/><text x="66.9470%" y="367.50">win..</text></g><g><title>winter_math::fft::interpolate_poly (1,082 samples, 4.70%)</title><rect x="66.3976%" y="373" width="4.6956%" height="15" fill="rgb(216,99,12)" fg:x="15300" fg:w="1082"/><text x="66.6476%" y="383.50">winte..</text></g><g><title>winter_math::field::f128::mul (7 samples, 0.03%)</title><rect x="71.0932%" y="341" width="0.0304%" height="15" fill="rgb(226,22,26)" fg:x="16382" fg:w="7"/><text x="71.3432%" y="351.50"></text></g><g><title>winter_math::utils::get_power_series (9 samples, 0.04%)</title><rect x="71.0932%" y="357" width="0.0391%" height="15" fill="rgb(217,163,10)" fg:x="16382" fg:w="9"/><text x="71.3432%" y="367.50"></text></g><g><title>winter_math::fft::get_inv_twiddles (31 samples, 0.13%)</title><rect x="71.0932%" y="373" width="0.1345%" height="15" fill="rgb(213,25,53)" fg:x="16382" fg:w="31"/><text x="71.3432%" y="383.50"></text></g><g><title>winter_prover::matrix::Matrix&lt;E&gt;::interpolate_columns (1,130 samples, 4.90%)</title><rect x="66.3976%" y="389" width="4.9039%" height="15" fill="rgb(252,105,26)" fg:x="15300" fg:w="1130"/><text x="66.6476%" y="399.50">winter..</text></g><g><title>[libc.so.6] (17 samples, 0.07%)</title><rect x="71.2277%" y="373" width="0.0738%" height="15" fill="rgb(220,39,43)" fg:x="16413" fg:w="17"/><text x="71.4777%" y="383.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (62 samples, 0.27%)</title><rect x="71.3015%" y="37" width="0.2691%" height="15" fill="rgb(229,68,48)" fg:x="16430" fg:w="62"/><text x="71.5515%" y="47.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (167 samples, 0.72%)</title><rect x="71.3015%" y="53" width="0.7247%" height="15" fill="rgb(252,8,32)" fg:x="16430" fg:w="167"/><text x="71.5515%" y="63.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (300 samples, 1.30%)</title><rect x="71.3015%" y="69" width="1.3019%" height="15" fill="rgb(223,20,43)" fg:x="16430" fg:w="300"/><text x="71.5515%" y="79.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (472 samples, 2.05%)</title><rect x="71.3015%" y="85" width="2.0483%" height="15" fill="rgb(229,81,49)" fg:x="16430" fg:w="472"/><text x="71.5515%" y="95.50">w..</text></g><g><title>winter_math::fft::serial::fft_in_place (635 samples, 2.76%)</title><rect x="71.3015%" y="101" width="2.7557%" height="15" fill="rgb(236,28,36)" fg:x="16430" fg:w="635"/><text x="71.5515%" y="111.50">wi..</text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="74.0572%" y="101" width="0.0130%" height="15" fill="rgb(249,185,26)" fg:x="17065" fg:w="3"/><text x="74.3072%" y="111.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (795 samples, 3.45%)</title><rect x="71.3015%" y="117" width="3.4501%" height="15" fill="rgb(249,174,33)" fg:x="16430" fg:w="795"/><text x="71.5515%" y="127.50">win..</text></g><g><title>winter_math::fft::serial::fft_in_place (958 samples, 4.16%)</title><rect x="71.3015%" y="133" width="4.1574%" height="15" fill="rgb(233,201,37)" fg:x="16430" fg:w="958"/><text x="71.5515%" y="143.50">winte..</text></g><g><title>winter_math::fft::serial::fft_in_place (1,138 samples, 4.94%)</title><rect x="71.3015%" y="149" width="4.9386%" height="15" fill="rgb(221,78,26)" fg:x="16430" fg:w="1138"/><text x="71.5515%" y="159.50">winter..</text></g><g><title>winter_math::fft::serial::fft_in_place (1,310 samples, 5.69%)</title><rect x="71.3015%" y="165" width="5.6850%" height="15" fill="rgb(250,127,30)" fg:x="16430" fg:w="1310"/><text x="71.5515%" y="175.50">winter_..</text></g><g><title>winter_math::fft::serial::fft_in_place (1,488 samples, 6.46%)</title><rect x="71.3015%" y="181" width="6.4575%" height="15" fill="rgb(230,49,44)" fg:x="16430" fg:w="1488"/><text x="71.5515%" y="191.50">winter_m..</text></g><g><title>winter_math::fft::serial::fft_in_place (1,669 samples, 7.24%)</title><rect x="71.3015%" y="197" width="7.2430%" height="15" fill="rgb(229,67,23)" fg:x="16430" fg:w="1669"/><text x="71.5515%" y="207.50">winter_mat..</text></g><g><title>winter_math::fft::serial::fft_in_place (1,844 samples, 8.00%)</title><rect x="71.3015%" y="213" width="8.0024%" height="15" fill="rgb(249,83,47)" fg:x="16430" fg:w="1844"/><text x="71.5515%" y="223.50">winter_math..</text></g><g><title>winter_math::fft::serial::fft_in_place (2,018 samples, 8.76%)</title><rect x="71.3015%" y="229" width="8.7575%" height="15" fill="rgb(215,43,3)" fg:x="16430" fg:w="2018"/><text x="71.5515%" y="239.50">winter_math:..</text></g><g><title>winter_math::fft::serial::fft_in_place (2,207 samples, 9.58%)</title><rect x="71.3015%" y="245" width="9.5777%" height="15" fill="rgb(238,154,13)" fg:x="16430" fg:w="2207"/><text x="71.5515%" y="255.50">winter_math::f..</text></g><g><title>winter_math::fft::serial::fft_in_place (2,399 samples, 10.41%)</title><rect x="71.3015%" y="261" width="10.4110%" height="15" fill="rgb(219,56,2)" fg:x="16430" fg:w="2399"/><text x="71.5515%" y="271.50">winter_math::ff..</text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="81.7125%" y="261" width="0.0130%" height="15" fill="rgb(233,0,4)" fg:x="18829" fg:w="3"/><text x="81.9625%" y="271.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (2,580 samples, 11.20%)</title><rect x="71.3015%" y="277" width="11.1965%" height="15" fill="rgb(235,30,7)" fg:x="16430" fg:w="2580"/><text x="71.5515%" y="287.50">winter_math::fft..</text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="82.4979%" y="277" width="0.0174%" height="15" fill="rgb(250,79,13)" fg:x="19010" fg:w="4"/><text x="82.7479%" y="287.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (2,767 samples, 12.01%)</title><rect x="71.3015%" y="293" width="12.0080%" height="15" fill="rgb(211,146,34)" fg:x="16430" fg:w="2767"/><text x="71.5515%" y="303.50">winter_math::fft::..</text></g><g><title>winter_math::fft::serial::fft_in_place (2,960 samples, 12.85%)</title><rect x="71.3015%" y="309" width="12.8455%" height="15" fill="rgb(228,22,38)" fg:x="16430" fg:w="2960"/><text x="71.5515%" y="319.50">winter_math::fft::s..</text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.03%)</title><rect x="84.1470%" y="309" width="0.0260%" height="15" fill="rgb(235,168,5)" fg:x="19390" fg:w="6"/><text x="84.3970%" y="319.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (3,161 samples, 13.72%)</title><rect x="71.3015%" y="325" width="13.7178%" height="15" fill="rgb(221,155,16)" fg:x="16430" fg:w="3161"/><text x="71.5515%" y="335.50">winter_math::fft::ser..</text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.06%)</title><rect x="85.0193%" y="325" width="0.0564%" height="15" fill="rgb(215,215,53)" fg:x="19591" fg:w="13"/><text x="85.2693%" y="335.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (3,377 samples, 14.66%)</title><rect x="71.3015%" y="341" width="14.6552%" height="15" fill="rgb(223,4,10)" fg:x="16430" fg:w="3377"/><text x="71.5515%" y="351.50">winter_math::fft::seri..</text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.12%)</title><rect x="85.9567%" y="341" width="0.1172%" height="15" fill="rgb(234,103,6)" fg:x="19807" fg:w="27"/><text x="86.2067%" y="351.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (3,638 samples, 15.79%)</title><rect x="71.3015%" y="357" width="15.7879%" height="15" fill="rgb(227,97,0)" fg:x="16430" fg:w="3638"/><text x="71.5515%" y="367.50">winter_math::fft::serial..</text></g><g><title>winter_prover::matrix::Matrix&lt;E&gt;::evaluate_columns_over (5,198 samples, 22.56%)</title><rect x="71.3015%" y="389" width="22.5578%" height="15" fill="rgb(234,150,53)" fg:x="16430" fg:w="5198"/><text x="71.5515%" y="399.50">winter_prover::matrix::Matrix&lt;E&gt;::ev..</text></g><g><title>winter_math::fft::evaluate_poly_with_offset (5,198 samples, 22.56%)</title><rect x="71.3015%" y="373" width="22.5578%" height="15" fill="rgb(228,201,54)" fg:x="16430" fg:w="5198"/><text x="71.5515%" y="383.50">winter_math::fft::evaluate_poly_with..</text></g><g><title>blake3::Output::root_hash (26 samples, 0.11%)</title><rect x="93.8593%" y="341" width="0.1128%" height="15" fill="rgb(222,22,37)" fg:x="21628" fg:w="26"/><text x="94.1093%" y="351.50"></text></g><g><title>[libc.so.6] (16 samples, 0.07%)</title><rect x="93.9721%" y="325" width="0.0694%" height="15" fill="rgb(237,53,32)" fg:x="21654" fg:w="16"/><text x="94.2221%" y="335.50"></text></g><g><title>blake3::ChunkState::update (19 samples, 0.08%)</title><rect x="93.9721%" y="341" width="0.0825%" height="15" fill="rgb(233,25,53)" fg:x="21654" fg:w="19"/><text x="94.2221%" y="351.50"></text></g><g><title>blake3::hash (68 samples, 0.30%)</title><rect x="93.8593%" y="357" width="0.2951%" height="15" fill="rgb(210,40,34)" fg:x="21628" fg:w="68"/><text x="94.1093%" y="367.50"></text></g><g><title>winter_crypto::merkle::MerkleTree&lt;H&gt;::new (89 samples, 0.39%)</title><rect x="93.8593%" y="373" width="0.3862%" height="15" fill="rgb(241,220,44)" fg:x="21628" fg:w="89"/><text x="94.1093%" y="383.50"></text></g><g><title>blake3::Output::root_hash (11 samples, 0.05%)</title><rect x="94.2455%" y="357" width="0.0477%" height="15" fill="rgb(235,28,35)" fg:x="21717" fg:w="11"/><text x="94.4955%" y="367.50"></text></g><g><title>[libc.so.6] (6 samples, 0.03%)</title><rect x="94.2933%" y="341" width="0.0260%" height="15" fill="rgb(210,56,17)" fg:x="21728" fg:w="6"/><text x="94.5433%" y="351.50"></text></g><g><title>blake3::ChunkState::update (16 samples, 0.07%)</title><rect x="94.2933%" y="357" width="0.0694%" height="15" fill="rgb(224,130,29)" fg:x="21728" fg:w="16"/><text x="94.5433%" y="367.50"></text></g><g><title>blake3::hash (54 samples, 0.23%)</title><rect x="94.2455%" y="373" width="0.2343%" height="15" fill="rgb(235,212,8)" fg:x="21717" fg:w="54"/><text x="94.4955%" y="383.50"></text></g><g><title>winter_prover::Prover::build_trace_commitment (6,527 samples, 28.33%)</title><rect x="66.3976%" y="405" width="28.3253%" height="15" fill="rgb(223,33,50)" fg:x="15300" fg:w="6527"/><text x="66.6476%" y="415.50">winter_prover::Prover::build_trace_commitment</text></g><g><title>winter_prover::matrix::Matrix&lt;E&gt;::commit_to_rows (199 samples, 0.86%)</title><rect x="93.8593%" y="389" width="0.8636%" height="15" fill="rgb(219,149,13)" fg:x="21628" fg:w="199"/><text x="94.1093%" y="399.50"></text></g><g><title>winter_math::field::f128::mul (9 samples, 0.04%)</title><rect x="94.7229%" y="373" width="0.0391%" height="15" fill="rgb(250,156,29)" fg:x="21827" fg:w="9"/><text x="94.9729%" y="383.50"></text></g><g><title>winter_math::utils::get_power_series (11 samples, 0.05%)</title><rect x="94.7229%" y="389" width="0.0477%" height="15" fill="rgb(216,193,19)" fg:x="21827" fg:w="11"/><text x="94.9729%" y="399.50"></text></g><g><title>winter_math::fft::get_twiddles (33 samples, 0.14%)</title><rect x="94.7229%" y="405" width="0.1432%" height="15" fill="rgb(216,135,14)" fg:x="21827" fg:w="33"/><text x="94.9729%" y="415.50"></text></g><g><title>blake3::Output::root_hash (3 samples, 0.01%)</title><rect x="94.8661%" y="373" width="0.0130%" height="15" fill="rgb(241,47,5)" fg:x="21860" fg:w="3"/><text x="95.1161%" y="383.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="94.8791%" y="357" width="0.0174%" height="15" fill="rgb(233,42,35)" fg:x="21863" fg:w="4"/><text x="95.1291%" y="367.50"></text></g><g><title>blake3::ChunkState::update (9 samples, 0.04%)</title><rect x="94.8791%" y="373" width="0.0391%" height="15" fill="rgb(231,13,6)" fg:x="21863" fg:w="9"/><text x="95.1291%" y="383.50"></text></g><g><title>blake3::hash (13 samples, 0.06%)</title><rect x="94.8661%" y="389" width="0.0564%" height="15" fill="rgb(207,181,40)" fg:x="21860" fg:w="13"/><text x="95.1161%" y="399.50"></text></g><g><title>winter_fri::utils::hash_values (15 samples, 0.07%)</title><rect x="94.8661%" y="405" width="0.0651%" height="15" fill="rgb(254,173,49)" fg:x="21860" fg:w="15"/><text x="95.1161%" y="415.50"></text></g><g><title>winter_math::field::f128::mul (203 samples, 0.88%)</title><rect x="94.9312%" y="389" width="0.8810%" height="15" fill="rgb(221,1,38)" fg:x="21875" fg:w="203"/><text x="95.1812%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="95.8122%" y="325" width="0.0130%" height="15" fill="rgb(206,124,46)" fg:x="22078" fg:w="3"/><text x="96.0622%" y="335.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (16 samples, 0.07%)</title><rect x="95.8122%" y="341" width="0.0694%" height="15" fill="rgb(249,21,11)" fg:x="22078" fg:w="16"/><text x="96.0622%" y="351.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (54 samples, 0.23%)</title><rect x="95.8122%" y="357" width="0.2343%" height="15" fill="rgb(222,201,40)" fg:x="22078" fg:w="54"/><text x="96.0622%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.04%)</title><rect x="96.0465%" y="357" width="0.0434%" height="15" fill="rgb(235,61,29)" fg:x="22132" fg:w="10"/><text x="96.2965%" y="367.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (134 samples, 0.58%)</title><rect x="95.8122%" y="373" width="0.5815%" height="15" fill="rgb(219,207,3)" fg:x="22078" fg:w="134"/><text x="96.0622%" y="383.50"></text></g><g><title>winter_math::fft::serial_fft (149 samples, 0.65%)</title><rect x="95.8122%" y="389" width="0.6466%" height="15" fill="rgb(222,56,46)" fg:x="22078" fg:w="149"/><text x="96.0622%" y="399.50"></text></g><g><title>winter_math::field::f128::mul (29 samples, 0.13%)</title><rect x="96.4588%" y="357" width="0.1259%" height="15" fill="rgb(239,76,54)" fg:x="22227" fg:w="29"/><text x="96.7088%" y="367.50"></text></g><g><title>winter_math::utils::batch_inversion (38 samples, 0.16%)</title><rect x="96.4588%" y="373" width="0.1649%" height="15" fill="rgb(231,124,27)" fg:x="22227" fg:w="38"/><text x="96.7088%" y="383.50"></text></g><g><title>winter_math::field::f128::mul (12 samples, 0.05%)</title><rect x="96.6237%" y="373" width="0.0521%" height="15" fill="rgb(249,195,6)" fg:x="22265" fg:w="12"/><text x="96.8737%" y="383.50"></text></g><g><title>winter_fri::folding::get_inv_offsets (51 samples, 0.22%)</title><rect x="96.4588%" y="389" width="0.2213%" height="15" fill="rgb(237,174,47)" fg:x="22227" fg:w="51"/><text x="96.7088%" y="399.50"></text></g><g><title>winter_fri::folding::apply_drp (458 samples, 1.99%)</title><rect x="94.9312%" y="405" width="1.9876%" height="15" fill="rgb(206,201,31)" fg:x="21875" fg:w="458"/><text x="95.1812%" y="415.50">w..</text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="96.9188%" y="357" width="0.0130%" height="15" fill="rgb(231,57,52)" fg:x="22333" fg:w="3"/><text x="97.1688%" y="367.50"></text></g><g><title>blake3::ChunkState::update (5 samples, 0.02%)</title><rect x="96.9188%" y="373" width="0.0217%" height="15" fill="rgb(248,177,22)" fg:x="22333" fg:w="5"/><text x="97.1688%" y="383.50"></text></g><g><title>blake3::hash (8 samples, 0.03%)</title><rect x="96.9188%" y="389" width="0.0347%" height="15" fill="rgb(215,211,37)" fg:x="22333" fg:w="8"/><text x="97.1688%" y="399.50"></text></g><g><title>winter_prover::Prover::generate_proof (20,404 samples, 88.55%)</title><rect x="8.4234%" y="421" width="88.5475%" height="15" fill="rgb(241,128,51)" fg:x="1941" fg:w="20404"/><text x="8.6734%" y="431.50">winter_prover::Prover::generate_proof</text></g><g><title>winter_crypto::merkle::MerkleTree&lt;H&gt;::new (12 samples, 0.05%)</title><rect x="96.9188%" y="405" width="0.0521%" height="15" fill="rgb(227,165,31)" fg:x="22333" fg:w="12"/><text x="97.1688%" y="415.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="96.9796%" y="357" width="0.0174%" height="15" fill="rgb(228,167,24)" fg:x="22347" fg:w="4"/><text x="97.2296%" y="367.50"></text></g><g><title>[libc.so.6] (6 samples, 0.03%)</title><rect x="96.9796%" y="373" width="0.0260%" height="15" fill="rgb(228,143,12)" fg:x="22347" fg:w="6"/><text x="97.2296%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.03%)</title><rect x="96.9796%" y="405" width="0.0304%" height="15" fill="rgb(249,149,8)" fg:x="22347" fg:w="7"/><text x="97.2296%" y="415.50"></text></g><g><title>realloc (7 samples, 0.03%)</title><rect x="96.9796%" y="389" width="0.0304%" height="15" fill="rgb(243,35,44)" fg:x="22347" fg:w="7"/><text x="97.2296%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (8 samples, 0.03%)</title><rect x="96.9796%" y="421" width="0.0347%" height="15" fill="rgb(246,89,9)" fg:x="22347" fg:w="8"/><text x="97.2296%" y="431.50"></text></g><g><title>_start (20,455 samples, 88.77%)</title><rect x="8.4147%" y="533" width="88.7688%" height="15" fill="rgb(233,213,13)" fg:x="1939" fg:w="20455"/><text x="8.6647%" y="543.50">_start</text></g><g><title>__libc_start_main (20,455 samples, 88.77%)</title><rect x="8.4147%" y="517" width="88.7688%" height="15" fill="rgb(233,141,41)" fg:x="1939" fg:w="20455"/><text x="8.6647%" y="527.50">__libc_start_main</text></g><g><title>[libc.so.6] (20,455 samples, 88.77%)</title><rect x="8.4147%" y="501" width="88.7688%" height="15" fill="rgb(239,167,4)" fg:x="1939" fg:w="20455"/><text x="8.6647%" y="511.50">[libc.so.6]</text></g><g><title>main (20,455 samples, 88.77%)</title><rect x="8.4147%" y="485" width="88.7688%" height="15" fill="rgb(209,217,16)" fg:x="1939" fg:w="20455"/><text x="8.6647%" y="495.50">main</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (20,455 samples, 88.77%)</title><rect x="8.4147%" y="469" width="88.7688%" height="15" fill="rgb(219,88,35)" fg:x="1939" fg:w="20455"/><text x="8.6647%" y="479.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>winterfell::main (20,455 samples, 88.77%)</title><rect x="8.4147%" y="453" width="88.7688%" height="15" fill="rgb(220,193,23)" fg:x="1939" fg:w="20455"/><text x="8.6647%" y="463.50">winterfell::main</text></g><g><title>&lt;examples::collatz_divisors::CollatzExample as examples::Example&gt;::prove (20,453 samples, 88.76%)</title><rect x="8.4234%" y="437" width="88.7601%" height="15" fill="rgb(230,90,52)" fg:x="1941" fg:w="20453"/><text x="8.6734%" y="447.50">&lt;examples::collatz_divisors::CollatzExample as examples::Example&gt;::prove</text></g><g><title>[winterfell] (7 samples, 0.03%)</title><rect x="97.1835%" y="533" width="0.0304%" height="15" fill="rgb(252,106,19)" fg:x="22394" fg:w="7"/><text x="97.4335%" y="543.50"></text></g><g><title>winter_math::field::f128::mul (7 samples, 0.03%)</title><rect x="97.1835%" y="517" width="0.0304%" height="15" fill="rgb(206,74,20)" fg:x="22394" fg:w="7"/><text x="97.4335%" y="527.50"></text></g><g><title>winter_prover::constraints::evaluator::ConstraintEvaluator&lt;A,E&gt;::evaluate_main_transition (22 samples, 0.10%)</title><rect x="97.2139%" y="517" width="0.0955%" height="15" fill="rgb(230,138,44)" fg:x="22401" fg:w="22"/><text x="97.4639%" y="527.50"></text></g><g><title>winter_prover::constraints::boundary::BoundaryConstraints&lt;E&gt;::evaluate_main (23 samples, 0.10%)</title><rect x="97.3181%" y="517" width="0.0998%" height="15" fill="rgb(235,182,43)" fg:x="22425" fg:w="23"/><text x="97.5681%" y="527.50"></text></g><g><title>winter_math::field::f128::mul (156 samples, 0.68%)</title><rect x="97.4266%" y="517" width="0.6770%" height="15" fill="rgb(242,16,51)" fg:x="22450" fg:w="156"/><text x="97.6766%" y="527.50"></text></g><g><title>winter_math::fft::serial_fft (3 samples, 0.01%)</title><rect x="98.1035%" y="517" width="0.0130%" height="15" fill="rgb(248,9,4)" fg:x="22606" fg:w="3"/><text x="98.3535%" y="527.50"></text></g><g><title>winter_math::fft::serial::fft_in_place (22 samples, 0.10%)</title><rect x="98.1166%" y="517" width="0.0955%" height="15" fill="rgb(210,31,22)" fg:x="22609" fg:w="22"/><text x="98.3666%" y="527.50"></text></g><g><title>winter_air::air::transition::TransitionConstraintGroup&lt;E&gt;::merge_evaluations2 (24 samples, 0.10%)</title><rect x="98.2251%" y="517" width="0.1042%" height="15" fill="rgb(239,54,39)" fg:x="22634" fg:w="24"/><text x="98.4751%" y="527.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="98.3292%" y="517" width="0.0130%" height="15" fill="rgb(230,99,41)" fg:x="22658" fg:w="3"/><text x="98.5792%" y="527.50"></text></g><g><title>cfree (7 samples, 0.03%)</title><rect x="98.3422%" y="517" width="0.0304%" height="15" fill="rgb(253,106,12)" fg:x="22661" fg:w="7"/><text x="98.5922%" y="527.50"></text></g><g><title>blake3::hash (43 samples, 0.19%)</title><rect x="98.3726%" y="517" width="0.1866%" height="15" fill="rgb(213,46,41)" fg:x="22668" fg:w="43"/><text x="98.6226%" y="527.50"></text></g><g><title>blake3::Output::root_hash (9 samples, 0.04%)</title><rect x="98.5592%" y="517" width="0.0391%" height="15" fill="rgb(215,133,35)" fg:x="22711" fg:w="9"/><text x="98.8092%" y="527.50"></text></g><g><title>blake3::ChunkState::update (13 samples, 0.06%)</title><rect x="98.5983%" y="517" width="0.0564%" height="15" fill="rgb(213,28,5)" fg:x="22720" fg:w="13"/><text x="98.8483%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (40 samples, 0.17%)</title><rect x="98.6547%" y="517" width="0.1736%" height="15" fill="rgb(215,77,49)" fg:x="22733" fg:w="40"/><text x="98.9047%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (9 samples, 0.04%)</title><rect x="98.8283%" y="517" width="0.0391%" height="15" fill="rgb(248,100,22)" fg:x="22773" fg:w="9"/><text x="99.0783%" y="527.50"></text></g><g><title>[libc.so.6] (16 samples, 0.07%)</title><rect x="98.8673%" y="517" width="0.0694%" height="15" fill="rgb(208,67,9)" fg:x="22782" fg:w="16"/><text x="99.1173%" y="527.50"></text></g><g><title>&lt;examples::collatz_divisors::air::CollatzAir as winter_air::air::Air&gt;::evaluate_transition (4 samples, 0.02%)</title><rect x="98.9368%" y="517" width="0.0174%" height="15" fill="rgb(219,133,21)" fg:x="22798" fg:w="4"/><text x="99.1868%" y="527.50"></text></g><g><title>[unknown] (440 samples, 1.91%)</title><rect x="97.2139%" y="533" width="1.9095%" height="15" fill="rgb(246,46,29)" fg:x="22401" fg:w="440"/><text x="97.4639%" y="543.50">[..</text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.17%)</title><rect x="98.9541%" y="517" width="0.1692%" height="15" fill="rgb(246,185,52)" fg:x="22802" fg:w="39"/><text x="99.2041%" y="527.50"></text></g><g><title>winter_math::field::f128::mul (4 samples, 0.02%)</title><rect x="99.1234%" y="517" width="0.0174%" height="15" fill="rgb(252,136,11)" fg:x="22841" fg:w="4"/><text x="99.3734%" y="527.50"></text></g><g><title>[libc.so.6] (36 samples, 0.16%)</title><rect x="99.1234%" y="533" width="0.1562%" height="15" fill="rgb(219,138,53)" fg:x="22841" fg:w="36"/><text x="99.3734%" y="543.50"></text></g><g><title>blake3::ChunkState::update (32 samples, 0.14%)</title><rect x="99.1407%" y="517" width="0.1389%" height="15" fill="rgb(211,51,23)" fg:x="22845" fg:w="32"/><text x="99.3907%" y="527.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 0.03%)</title><rect x="99.2796%" y="533" width="0.0260%" height="15" fill="rgb(247,221,28)" fg:x="22877" fg:w="6"/><text x="99.5296%" y="543.50"></text></g><g><title>winter_math::field::f128::mul (5 samples, 0.02%)</title><rect x="99.3056%" y="517" width="0.0217%" height="15" fill="rgb(251,222,45)" fg:x="22883" fg:w="5"/><text x="99.5556%" y="527.50"></text></g><g><title>winter_fri::folding::apply_drp (4 samples, 0.02%)</title><rect x="99.3317%" y="517" width="0.0174%" height="15" fill="rgb(217,162,53)" fg:x="22889" fg:w="4"/><text x="99.5817%" y="527.50"></text></g><g><title>blake3::hash (12 samples, 0.05%)</title><rect x="99.3490%" y="517" width="0.0521%" height="15" fill="rgb(229,93,14)" fg:x="22893" fg:w="12"/><text x="99.5990%" y="527.50"></text></g><g><title>blake3::Output::root_hash (13 samples, 0.06%)</title><rect x="99.4011%" y="517" width="0.0564%" height="15" fill="rgb(209,67,49)" fg:x="22905" fg:w="13"/><text x="99.6511%" y="527.50"></text></g><g><title>blake3::ChunkState::update (9 samples, 0.04%)</title><rect x="99.4575%" y="517" width="0.0391%" height="15" fill="rgb(213,87,29)" fg:x="22918" fg:w="9"/><text x="99.7075%" y="527.50"></text></g><g><title>[anon] (68 samples, 0.30%)</title><rect x="99.3056%" y="533" width="0.2951%" height="15" fill="rgb(205,151,52)" fg:x="22883" fg:w="68"/><text x="99.5556%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.10%)</title><rect x="99.4966%" y="517" width="0.1042%" height="15" fill="rgb(253,215,39)" fg:x="22927" fg:w="24"/><text x="99.7466%" y="527.50"></text></g><g><title>winter_prover::constraints::evaluator::ConstraintEvaluator&lt;A,E&gt;::evaluate (5 samples, 0.02%)</title><rect x="99.6007%" y="517" width="0.0217%" height="15" fill="rgb(221,220,41)" fg:x="22951" fg:w="5"/><text x="99.8507%" y="527.50"></text></g><g><title>winter_prover::constraints::evaluation_table::ConstraintEvaluationTable&lt;E&gt;::into_poly (7 samples, 0.03%)</title><rect x="99.6224%" y="517" width="0.0304%" height="15" fill="rgb(218,133,21)" fg:x="22956" fg:w="7"/><text x="99.8724%" y="527.50"></text></g><g><title>winter_prover::composer::DeepCompositionPoly&lt;E&gt;::adjust_degree (4 samples, 0.02%)</title><rect x="99.6528%" y="517" width="0.0174%" height="15" fill="rgb(221,193,43)" fg:x="22963" fg:w="4"/><text x="99.9028%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (14 samples, 0.06%)</title><rect x="99.6745%" y="517" width="0.0608%" height="15" fill="rgb(240,128,52)" fg:x="22968" fg:w="14"/><text x="99.9245%" y="527.50"></text></g><g><title>[[stack]] (33 samples, 0.14%)</title><rect x="99.6007%" y="533" width="0.1432%" height="15" fill="rgb(253,114,12)" fg:x="22951" fg:w="33"/><text x="99.8507%" y="543.50"></text></g><g><title>winter_prover::constraints::evaluator::ConstraintEvaluator&lt;A,E&gt;::evaluate_main_transition (3 samples, 0.01%)</title><rect x="99.7440%" y="517" width="0.0130%" height="15" fill="rgb(215,223,47)" fg:x="22984" fg:w="3"/><text x="99.9940%" y="527.50"></text></g><g><title>winter_prover::constraints::boundary::BoundaryConstraintGroup&lt;E&gt;::evaluate_main (5 samples, 0.02%)</title><rect x="99.7657%" y="517" width="0.0217%" height="15" fill="rgb(248,225,23)" fg:x="22989" fg:w="5"/><text x="100.0157%" y="527.50"></text></g><g><title>winter_prover::composer::acc_trace_poly (5 samples, 0.02%)</title><rect x="99.7874%" y="517" width="0.0217%" height="15" fill="rgb(250,108,0)" fg:x="22994" fg:w="5"/><text x="100.0374%" y="527.50"></text></g><g><title>winter_math::field::f128::mul (32 samples, 0.14%)</title><rect x="99.8177%" y="517" width="0.1389%" height="15" fill="rgb(228,208,7)" fg:x="23001" fg:w="32"/><text x="100.0677%" y="527.50"></text></g><g><title>winter_air::air::transition::TransitionConstraintGroup&lt;E&gt;::merge_evaluations2 (4 samples, 0.02%)</title><rect x="99.9566%" y="517" width="0.0174%" height="15" fill="rgb(244,45,10)" fg:x="23033" fg:w="4"/><text x="100.2066%" y="527.50"></text></g><g><title>cfree (5 samples, 0.02%)</title><rect x="99.9740%" y="517" width="0.0217%" height="15" fill="rgb(207,125,25)" fg:x="23037" fg:w="5"/><text x="100.2240%" y="527.50"></text></g><g><title>all (23,043 samples, 100%)</title><rect x="0.0000%" y="565" width="100.0000%" height="15" fill="rgb(210,195,18)" fg:x="0" fg:w="23043"/><text x="0.2500%" y="575.50"></text></g><g><title>winterfell (23,043 samples, 100.00%)</title><rect x="0.0000%" y="549" width="100.0000%" height="15" fill="rgb(249,80,12)" fg:x="0" fg:w="23043"/><text x="0.2500%" y="559.50">winterfell</text></g><g><title>[[heap]] (59 samples, 0.26%)</title><rect x="99.7440%" y="533" width="0.2560%" height="15" fill="rgb(221,65,9)" fg:x="22984" fg:w="59"/><text x="99.9940%" y="543.50"></text></g></svg></svg>